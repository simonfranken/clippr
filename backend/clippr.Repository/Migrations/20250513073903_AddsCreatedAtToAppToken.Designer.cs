// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using clippr.Repository;

#nullable disable

namespace clippr.Repository.Migrations
{
    [DbContext(typeof(ClipprDbContext))]
    [Migration("20250513073903_AddsCreatedAtToAppToken")]
    partial class AddsCreatedAtToAppToken
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("clippr.Core.AppToken.AppTokenModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset>("ExpirationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<byte[]>("Hash")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("UserSubject")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserSubject");

                    b.ToTable("AppTokens");
                });

            modelBuilder.Entity("clippr.Core.Clip.ClipModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserSubject")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserSubject");

                    b.ToTable("Clips");
                });

            modelBuilder.Entity("clippr.Core.User.UserModel", b =>
                {
                    b.Property<string>("Subject")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GivenName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Subject");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("clippr.Core.AppToken.AppTokenModel", b =>
                {
                    b.HasOne("clippr.Core.User.UserModel", "User")
                        .WithMany("AppTokens")
                        .HasForeignKey("UserSubject")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("clippr.Core.Clip.ClipModel", b =>
                {
                    b.HasOne("clippr.Core.User.UserModel", "User")
                        .WithMany("Clips")
                        .HasForeignKey("UserSubject")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("clippr.Core.Clip.ClipContent", "Content", b1 =>
                        {
                            b1.Property<Guid>("ClipModelId")
                                .HasColumnType("char(36)");

                            b1.Property<byte[]>("Data")
                                .IsRequired()
                                .HasColumnType("longblob");

                            b1.Property<int>("Type")
                                .HasColumnType("int");

                            b1.HasKey("ClipModelId");

                            b1.ToTable("Clips");

                            b1.WithOwner()
                                .HasForeignKey("ClipModelId");
                        });

                    b.Navigation("Content")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("clippr.Core.User.UserModel", b =>
                {
                    b.Navigation("AppTokens");

                    b.Navigation("Clips");
                });
#pragma warning restore 612, 618
        }
    }
}
